buildscript {
	ext {
		springBootVersion = '1.3.2.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'net.saliman:gradle-cobertura-plugin:2.0.0' // cobertura plugin
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
	}
}

cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'cobertura'
apply plugin: 'com.github.kt3k.coveralls'

jar {
	baseName = 'inventory'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile 'org.springframework.data:spring-data-mongodb:1.9.0.BUILD-SNAPSHOT'
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
